{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"K_medoids.py","provenance":[],"authorship_tag":"ABX9TyPmEajrCPyQa3xbHyGb4BFj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install https://github.com/scikit-learn-contrib/scikit-learn-extra/archive/master.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O_M-8xLSvkML","executionInfo":{"status":"ok","timestamp":1661497603283,"user_tz":-330,"elapsed":19675,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"52b08c5a-d4ca-4852-be86-bab68916ca94"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting https://github.com/scikit-learn-contrib/scikit-learn-extra/archive/master.zip\n","  Using cached https://github.com/scikit-learn-contrib/scikit-learn-extra/archive/master.zip\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.7/dist-packages (from scikit-learn-extra==0.3.0.dev0) (1.7.3)\n","Requirement already satisfied: scikit-learn>=0.23.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn-extra==0.3.0.dev0) (1.0.2)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from scikit-learn-extra==0.3.0.dev0) (1.21.6)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.23.0->scikit-learn-extra==0.3.0.dev0) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.23.0->scikit-learn-extra==0.3.0.dev0) (1.1.0)\n"]}]},{"cell_type":"code","source":["!pip install opendatasets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g8hUFTOkhGjA","executionInfo":{"status":"ok","timestamp":1661497605936,"user_tz":-330,"elapsed":2658,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"425cd746-d07f-49c1-c577-0ba90fd7fd83"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: opendatasets in /usr/local/lib/python3.7/dist-packages (0.1.22)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from opendatasets) (4.64.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from opendatasets) (7.1.2)\n","Requirement already satisfied: kaggle in /usr/local/lib/python3.7/dist-packages (from opendatasets) (1.5.12)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from kaggle->opendatasets) (2.23.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.7/dist-packages (from kaggle->opendatasets) (2022.6.15)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from kaggle->opendatasets) (2.8.2)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from kaggle->opendatasets) (1.24.3)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.7/dist-packages (from kaggle->opendatasets) (1.15.0)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.7/dist-packages (from kaggle->opendatasets) (6.1.2)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.7/dist-packages (from python-slugify->kaggle->opendatasets) (1.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->kaggle->opendatasets) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->kaggle->opendatasets) (2.10)\n"]}]},{"cell_type":"code","execution_count":98,"metadata":{"id":"tQDR-QX8gqqS","executionInfo":{"status":"ok","timestamp":1661497605937,"user_tz":-330,"elapsed":19,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import os\n","import opendatasets as od\n","\n","from sklearn import metrics\n","from sklearn.cluster import KMeans\n","from sklearn.preprocessing import StandardScaler\n","from yellowbrick.cluster import KElbowVisualizer\n","from sklearn import metrics\n","from sklearn_extra.cluster import KMedoids"]},{"cell_type":"code","source":["dataset='https://www.kaggle.com/datasets/rohan0301/unsupervised-learning-on-country-data'"],"metadata":{"id":"NykvatjZhnAQ","executionInfo":{"status":"ok","timestamp":1661497605937,"user_tz":-330,"elapsed":18,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":99,"outputs":[]},{"cell_type":"code","source":["od.download(dataset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WZQMKPtRhqB4","executionInfo":{"status":"ok","timestamp":1661497605937,"user_tz":-330,"elapsed":18,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"6d177183-849e-442f-e1a1-c6eb64b723ca"},"execution_count":100,"outputs":[{"output_type":"stream","name":"stdout","text":["Skipping, found downloaded files in \"./unsupervised-learning-on-country-data\" (use force=True to force download)\n"]}]},{"cell_type":"code","source":["data_dir='./unsupervised-learning-on-country-data'"],"metadata":{"id":"o7lZphKJiBUI","executionInfo":{"status":"ok","timestamp":1661497605938,"user_tz":-330,"elapsed":18,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":101,"outputs":[]},{"cell_type":"code","source":["os.listdir(data_dir)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2VE9f68WhtBf","executionInfo":{"status":"ok","timestamp":1661497605938,"user_tz":-330,"elapsed":18,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"fcdee29d-de6c-4a81-a7e7-d2857fc0e197"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Country-data.csv', 'data-dictionary.csv']"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["df1=pd.read_csv('/content/unsupervised-learning-on-country-data/Country-data.csv')\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"BBLauBCXg0tL","executionInfo":{"status":"ok","timestamp":1661497605938,"user_tz":-330,"elapsed":16,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"71cd2a2a-1295-46d3-f11d-2e4a89c4618d"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 country  child_mort  exports  health  imports  income  \\\n","0            Afghanistan        90.2     10.0    7.58     44.9    1610   \n","1                Albania        16.6     28.0    6.55     48.6    9930   \n","2                Algeria        27.3     38.4    4.17     31.4   12900   \n","3                 Angola       119.0     62.3    2.85     42.9    5900   \n","4    Antigua and Barbuda        10.3     45.5    6.03     58.9   19100   \n","..                   ...         ...      ...     ...      ...     ...   \n","162              Vanuatu        29.2     46.6    5.25     52.7    2950   \n","163            Venezuela        17.1     28.5    4.91     17.6   16500   \n","164              Vietnam        23.3     72.0    6.84     80.2    4490   \n","165                Yemen        56.3     30.0    5.18     34.4    4480   \n","166               Zambia        83.1     37.0    5.89     30.9    3280   \n","\n","     inflation  life_expec  total_fer   gdpp  \n","0         9.44        56.2       5.82    553  \n","1         4.49        76.3       1.65   4090  \n","2        16.10        76.5       2.89   4460  \n","3        22.40        60.1       6.16   3530  \n","4         1.44        76.8       2.13  12200  \n","..         ...         ...        ...    ...  \n","162       2.62        63.0       3.50   2970  \n","163      45.90        75.4       2.47  13500  \n","164      12.10        73.1       1.95   1310  \n","165      23.60        67.5       4.67   1310  \n","166      14.00        52.0       5.40   1460  \n","\n","[167 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-00dbc0c7-c821-46ba-b3cc-802e08612e60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>child_mort</th>\n","      <th>exports</th>\n","      <th>health</th>\n","      <th>imports</th>\n","      <th>income</th>\n","      <th>inflation</th>\n","      <th>life_expec</th>\n","      <th>total_fer</th>\n","      <th>gdpp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>90.2</td>\n","      <td>10.0</td>\n","      <td>7.58</td>\n","      <td>44.9</td>\n","      <td>1610</td>\n","      <td>9.44</td>\n","      <td>56.2</td>\n","      <td>5.82</td>\n","      <td>553</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>16.6</td>\n","      <td>28.0</td>\n","      <td>6.55</td>\n","      <td>48.6</td>\n","      <td>9930</td>\n","      <td>4.49</td>\n","      <td>76.3</td>\n","      <td>1.65</td>\n","      <td>4090</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Algeria</td>\n","      <td>27.3</td>\n","      <td>38.4</td>\n","      <td>4.17</td>\n","      <td>31.4</td>\n","      <td>12900</td>\n","      <td>16.10</td>\n","      <td>76.5</td>\n","      <td>2.89</td>\n","      <td>4460</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Angola</td>\n","      <td>119.0</td>\n","      <td>62.3</td>\n","      <td>2.85</td>\n","      <td>42.9</td>\n","      <td>5900</td>\n","      <td>22.40</td>\n","      <td>60.1</td>\n","      <td>6.16</td>\n","      <td>3530</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Antigua and Barbuda</td>\n","      <td>10.3</td>\n","      <td>45.5</td>\n","      <td>6.03</td>\n","      <td>58.9</td>\n","      <td>19100</td>\n","      <td>1.44</td>\n","      <td>76.8</td>\n","      <td>2.13</td>\n","      <td>12200</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>Vanuatu</td>\n","      <td>29.2</td>\n","      <td>46.6</td>\n","      <td>5.25</td>\n","      <td>52.7</td>\n","      <td>2950</td>\n","      <td>2.62</td>\n","      <td>63.0</td>\n","      <td>3.50</td>\n","      <td>2970</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>Venezuela</td>\n","      <td>17.1</td>\n","      <td>28.5</td>\n","      <td>4.91</td>\n","      <td>17.6</td>\n","      <td>16500</td>\n","      <td>45.90</td>\n","      <td>75.4</td>\n","      <td>2.47</td>\n","      <td>13500</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>Vietnam</td>\n","      <td>23.3</td>\n","      <td>72.0</td>\n","      <td>6.84</td>\n","      <td>80.2</td>\n","      <td>4490</td>\n","      <td>12.10</td>\n","      <td>73.1</td>\n","      <td>1.95</td>\n","      <td>1310</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>Yemen</td>\n","      <td>56.3</td>\n","      <td>30.0</td>\n","      <td>5.18</td>\n","      <td>34.4</td>\n","      <td>4480</td>\n","      <td>23.60</td>\n","      <td>67.5</td>\n","      <td>4.67</td>\n","      <td>1310</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>Zambia</td>\n","      <td>83.1</td>\n","      <td>37.0</td>\n","      <td>5.89</td>\n","      <td>30.9</td>\n","      <td>3280</td>\n","      <td>14.00</td>\n","      <td>52.0</td>\n","      <td>5.40</td>\n","      <td>1460</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>167 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00dbc0c7-c821-46ba-b3cc-802e08612e60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-00dbc0c7-c821-46ba-b3cc-802e08612e60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-00dbc0c7-c821-46ba-b3cc-802e08612e60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["data=df1.drop(['country'],axis=1)"],"metadata":{"id":"sRHmjfbwhSBm","executionInfo":{"status":"ok","timestamp":1661497605938,"user_tz":-330,"elapsed":15,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":104,"outputs":[]},{"cell_type":"markdown","source":["**Data Scaling**"],"metadata":{"id":"5Aw6ZE8-4nrH"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler().fit(x)\n","x_scaled = scaler.transform(x)\n","K_Medoids = KMedoids(n_clusters = 3, random_state = 0)\n","K_Medoids.fit(x_scaled)\n","y_kmed = K_Medoids.fit_predict(x_scaled)\n","\n","df_scaled=scaler.fit_transform(data.iloc[:,1:])\n","df_scaled=pd.DataFrame(df_scaled,columns=data.iloc[:,1:].columns, index=data.index )\n","df_final=pd.concat([data.iloc[:,0],df_scaled],axis=1)"],"metadata":{"id":"KMiA6H5aj3K_","executionInfo":{"status":"ok","timestamp":1661497605939,"user_tz":-330,"elapsed":16,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":105,"outputs":[]},{"cell_type":"code","source":["df_final"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"AgyvjvPCzs3a","executionInfo":{"status":"ok","timestamp":1661497605939,"user_tz":-330,"elapsed":14,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"7ef614b9-5994-44f2-9860-4d5d10e1ae2f"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     child_mort   exports    health   imports    income  inflation  \\\n","0          90.2 -1.138280  0.279088 -0.082455 -0.808245   0.157336   \n","1          16.6 -0.479658 -0.097016  0.070837 -0.375369  -0.312347   \n","2          27.3 -0.099122 -0.966073 -0.641762 -0.220844   0.789274   \n","3         119.0  0.775381 -1.448071 -0.165315 -0.585043   1.387054   \n","4          10.3  0.160668 -0.286894  0.497568  0.101732  -0.601749   \n","..          ...       ...       ...       ...       ...        ...   \n","162        29.2  0.200917 -0.571711  0.240700 -0.738527  -0.489784   \n","163        17.1 -0.461363 -0.695862 -1.213499 -0.033542   3.616865   \n","164        23.3  1.130305  0.008877  1.380030 -0.658404   0.409732   \n","165        56.3 -0.406478 -0.597272 -0.517472 -0.658924   1.500916   \n","166        83.1 -0.150348 -0.338015 -0.662477 -0.721358   0.590015   \n","\n","     life_expec  total_fer      gdpp  \n","0     -1.619092   1.902882 -0.679180  \n","1      0.647866  -0.859973 -0.485623  \n","2      0.670423  -0.038404 -0.465376  \n","3     -1.179234   2.128151 -0.516268  \n","4      0.704258  -0.541946 -0.041817  \n","..          ...        ...       ...  \n","162   -0.852161   0.365754 -0.546913  \n","163    0.546361  -0.316678  0.029323  \n","164    0.286958  -0.661206 -0.637754  \n","165   -0.344633   1.140944 -0.637754  \n","166   -2.092785   1.624609 -0.629546  \n","\n","[167 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-68abcfc4-7877-435d-a1a1-a71007854584\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>child_mort</th>\n","      <th>exports</th>\n","      <th>health</th>\n","      <th>imports</th>\n","      <th>income</th>\n","      <th>inflation</th>\n","      <th>life_expec</th>\n","      <th>total_fer</th>\n","      <th>gdpp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>90.2</td>\n","      <td>-1.138280</td>\n","      <td>0.279088</td>\n","      <td>-0.082455</td>\n","      <td>-0.808245</td>\n","      <td>0.157336</td>\n","      <td>-1.619092</td>\n","      <td>1.902882</td>\n","      <td>-0.679180</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>16.6</td>\n","      <td>-0.479658</td>\n","      <td>-0.097016</td>\n","      <td>0.070837</td>\n","      <td>-0.375369</td>\n","      <td>-0.312347</td>\n","      <td>0.647866</td>\n","      <td>-0.859973</td>\n","      <td>-0.485623</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27.3</td>\n","      <td>-0.099122</td>\n","      <td>-0.966073</td>\n","      <td>-0.641762</td>\n","      <td>-0.220844</td>\n","      <td>0.789274</td>\n","      <td>0.670423</td>\n","      <td>-0.038404</td>\n","      <td>-0.465376</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>119.0</td>\n","      <td>0.775381</td>\n","      <td>-1.448071</td>\n","      <td>-0.165315</td>\n","      <td>-0.585043</td>\n","      <td>1.387054</td>\n","      <td>-1.179234</td>\n","      <td>2.128151</td>\n","      <td>-0.516268</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10.3</td>\n","      <td>0.160668</td>\n","      <td>-0.286894</td>\n","      <td>0.497568</td>\n","      <td>0.101732</td>\n","      <td>-0.601749</td>\n","      <td>0.704258</td>\n","      <td>-0.541946</td>\n","      <td>-0.041817</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>29.2</td>\n","      <td>0.200917</td>\n","      <td>-0.571711</td>\n","      <td>0.240700</td>\n","      <td>-0.738527</td>\n","      <td>-0.489784</td>\n","      <td>-0.852161</td>\n","      <td>0.365754</td>\n","      <td>-0.546913</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>17.1</td>\n","      <td>-0.461363</td>\n","      <td>-0.695862</td>\n","      <td>-1.213499</td>\n","      <td>-0.033542</td>\n","      <td>3.616865</td>\n","      <td>0.546361</td>\n","      <td>-0.316678</td>\n","      <td>0.029323</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>23.3</td>\n","      <td>1.130305</td>\n","      <td>0.008877</td>\n","      <td>1.380030</td>\n","      <td>-0.658404</td>\n","      <td>0.409732</td>\n","      <td>0.286958</td>\n","      <td>-0.661206</td>\n","      <td>-0.637754</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>56.3</td>\n","      <td>-0.406478</td>\n","      <td>-0.597272</td>\n","      <td>-0.517472</td>\n","      <td>-0.658924</td>\n","      <td>1.500916</td>\n","      <td>-0.344633</td>\n","      <td>1.140944</td>\n","      <td>-0.637754</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>83.1</td>\n","      <td>-0.150348</td>\n","      <td>-0.338015</td>\n","      <td>-0.662477</td>\n","      <td>-0.721358</td>\n","      <td>0.590015</td>\n","      <td>-2.092785</td>\n","      <td>1.624609</td>\n","      <td>-0.629546</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>167 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68abcfc4-7877-435d-a1a1-a71007854584')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68abcfc4-7877-435d-a1a1-a71007854584 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68abcfc4-7877-435d-a1a1-a71007854584');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["y_kmed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2INd7bNnkJoD","executionInfo":{"status":"ok","timestamp":1661497605939,"user_tz":-330,"elapsed":14,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"33d8bba8-fe7f-4bf7-b427-dfbbc2d14a04"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2,\n","       2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2,\n","       2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1])"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["from sklearn.metrics import silhouette_samples, silhouette_score\n","K_Medoids = KMedoids(n_clusters = 3, random_state = 0)\n","K_Medoids.fit(x_scaled)\n","y_kmed = K_Medoids.fit_predict(x_scaled)\n","silhouette_avg = silhouette_score(x_scaled, y_kmed)\n","print(silhouette_avg)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GszOTjVRwuQ0","executionInfo":{"status":"ok","timestamp":1661497605939,"user_tz":-330,"elapsed":12,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"137ea966-2b80-45ce-a43c-b750c5acf374"},"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["0.4590416105554613\n"]}]},{"cell_type":"code","source":["sample_silhouette_values = silhouette_samples(x_scaled, y_kmed)\n","for i in range(3):\n","    ith_cluster_silhouette_values = sample_silhouette_values[y_kmed == i]\n","    print(np.mean(ith_cluster_silhouette_values))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-q3D6F1hw9xx","executionInfo":{"status":"ok","timestamp":1661497605940,"user_tz":-330,"elapsed":12,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"86147d31-fcb3-41c7-804c-4c1e4010cfb1"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stdout","text":["0.636330614585637\n","0.3768888598233938\n","0.36213487963471125\n"]}]},{"cell_type":"markdown","source":["**K Medoids Clusturing**\n","\n","A medoid can be defined as the point in the cluster, whose dissimilarities with all the other points in the cluster is minimum.The woking of the alorithms is as follows:\n","\n","\n","*   select k random points out of the n data points as the medoids\n","*   Associate each data point to the closest medoid by using any common distance metric methods.\n","*   We repeat the process for a given number of iteartions and at the end,we have our clusters\n","\n","\n"],"metadata":{"id":"geWbzqd35h3s"}},{"cell_type":"code","source":["sw = []\n","\n","for i in range(2, 11):\n","    K_Medoids = KMedoids(n_clusters = i, random_state = 0)\n","    K_Medoids.fit(x_scaled)\n","    y_kmed = K_Medoids.fit_predict(x_scaled)\n","    silhouette_avg = silhouette_score(x_scaled, y_kmed)\n","    sw.append(silhouette_avg)"],"metadata":{"id":"fG5QWh_axFiR","executionInfo":{"status":"ok","timestamp":1661497605940,"user_tz":-330,"elapsed":11,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":110,"outputs":[]},{"cell_type":"code","source":["plt.plot(range(2, 11), sw)\n","plt.title('Silhoute Score')\n","plt.xlabel('Number of clusters')\n","plt.ylabel('SW')      #within cluster sum of squares\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":376},"id":"9hoYJo6PxQZI","executionInfo":{"status":"ok","timestamp":1661497607336,"user_tz":-330,"elapsed":1407,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"d8444317-b1d0-42df-991d-b42add59eecb"},"execution_count":111,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x396 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#chosing no. of clusters as 4 and refitting kmedoid model\n","K_Medoids = KMedoids(n_clusters = 4, random_state = 0)\n","K_Medoids.fit(df_scaled),\n","\n","#count number of records in every cluster\n","pd.Series(K_Medoids.labels_).value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2OTP0wSPxURO","executionInfo":{"status":"ok","timestamp":1661497607337,"user_tz":-330,"elapsed":16,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"094153cb-058c-41e5-b0de-0a718e826cc8"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    49\n","3    44\n","0    41\n","1    33\n","dtype: int64"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["#calculate Silhouette Coefficient for K=4\n","\n","metrics.silhouette_score(df_scaled,K_Medoids.labels_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61nASE_Rxumd","executionInfo":{"status":"ok","timestamp":1661497607337,"user_tz":-330,"elapsed":13,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"f4e3388f-2a74-494b-d28b-30a49b417bed"},"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.18218017437076406"]},"metadata":{},"execution_count":113}]},{"cell_type":"markdown","source":["silhouette_score = 0.1216820954405605 for n_clusters=7\n","so we will go for 4"],"metadata":{"id":"wRafXROW1j0h"}},{"cell_type":"markdown","source":["**Predictions**"],"metadata":{"id":"4idisu2y7Qrv"}},{"cell_type":"code","source":["#predicting values\n","cluster_labels = K_Medoids.fit_predict(df_scaled)"],"metadata":{"id":"uB9BdxGsxzrR","executionInfo":{"status":"ok","timestamp":1661497607337,"user_tz":-330,"elapsed":12,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["preds = K_Medoids.labels_\n","kmid_df = pd.DataFrame(df1)\n","kmid_df['K_medoids_Clusters'] = preds\n","kmid_df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"Ee4AlxJi2IEp","executionInfo":{"status":"ok","timestamp":1661497607337,"user_tz":-330,"elapsed":12,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"4bc0b0a2-aa8a-407d-b6c4-8290147bbe3b"},"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               country  child_mort  exports  health  imports  income  \\\n","0          Afghanistan        90.2     10.0    7.58     44.9    1610   \n","1              Albania        16.6     28.0    6.55     48.6    9930   \n","2              Algeria        27.3     38.4    4.17     31.4   12900   \n","3               Angola       119.0     62.3    2.85     42.9    5900   \n","4  Antigua and Barbuda        10.3     45.5    6.03     58.9   19100   \n","5            Argentina        14.5     18.9    8.10     16.0   18700   \n","6              Armenia        18.1     20.8    4.40     45.3    6700   \n","7            Australia         4.8     19.8    8.73     20.9   41400   \n","8              Austria         4.3     51.3   11.00     47.8   43200   \n","9           Azerbaijan        39.2     54.3    5.88     20.7   16000   \n","\n","   inflation  life_expec  total_fer   gdpp  K_medoids_Clusters  \n","0      9.440        56.2       5.82    553                   0  \n","1      4.490        76.3       1.65   4090                   3  \n","2     16.100        76.5       2.89   4460                   3  \n","3     22.400        60.1       6.16   3530                   0  \n","4      1.440        76.8       2.13  12200                   2  \n","5     20.900        75.8       2.37  10300                   3  \n","6      7.770        73.3       1.69   3220                   3  \n","7      1.160        82.0       1.93  51900                   1  \n","8      0.873        80.5       1.44  46900                   1  \n","9     13.800        69.1       1.92   5840                   3  "],"text/html":["\n","  <div id=\"df-aa7661a2-28ea-4a97-913c-c75a8b770d60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>child_mort</th>\n","      <th>exports</th>\n","      <th>health</th>\n","      <th>imports</th>\n","      <th>income</th>\n","      <th>inflation</th>\n","      <th>life_expec</th>\n","      <th>total_fer</th>\n","      <th>gdpp</th>\n","      <th>K_medoids_Clusters</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>90.2</td>\n","      <td>10.0</td>\n","      <td>7.58</td>\n","      <td>44.9</td>\n","      <td>1610</td>\n","      <td>9.440</td>\n","      <td>56.2</td>\n","      <td>5.82</td>\n","      <td>553</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>16.6</td>\n","      <td>28.0</td>\n","      <td>6.55</td>\n","      <td>48.6</td>\n","      <td>9930</td>\n","      <td>4.490</td>\n","      <td>76.3</td>\n","      <td>1.65</td>\n","      <td>4090</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Algeria</td>\n","      <td>27.3</td>\n","      <td>38.4</td>\n","      <td>4.17</td>\n","      <td>31.4</td>\n","      <td>12900</td>\n","      <td>16.100</td>\n","      <td>76.5</td>\n","      <td>2.89</td>\n","      <td>4460</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Angola</td>\n","      <td>119.0</td>\n","      <td>62.3</td>\n","      <td>2.85</td>\n","      <td>42.9</td>\n","      <td>5900</td>\n","      <td>22.400</td>\n","      <td>60.1</td>\n","      <td>6.16</td>\n","      <td>3530</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Antigua and Barbuda</td>\n","      <td>10.3</td>\n","      <td>45.5</td>\n","      <td>6.03</td>\n","      <td>58.9</td>\n","      <td>19100</td>\n","      <td>1.440</td>\n","      <td>76.8</td>\n","      <td>2.13</td>\n","      <td>12200</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Argentina</td>\n","      <td>14.5</td>\n","      <td>18.9</td>\n","      <td>8.10</td>\n","      <td>16.0</td>\n","      <td>18700</td>\n","      <td>20.900</td>\n","      <td>75.8</td>\n","      <td>2.37</td>\n","      <td>10300</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Armenia</td>\n","      <td>18.1</td>\n","      <td>20.8</td>\n","      <td>4.40</td>\n","      <td>45.3</td>\n","      <td>6700</td>\n","      <td>7.770</td>\n","      <td>73.3</td>\n","      <td>1.69</td>\n","      <td>3220</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Australia</td>\n","      <td>4.8</td>\n","      <td>19.8</td>\n","      <td>8.73</td>\n","      <td>20.9</td>\n","      <td>41400</td>\n","      <td>1.160</td>\n","      <td>82.0</td>\n","      <td>1.93</td>\n","      <td>51900</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Austria</td>\n","      <td>4.3</td>\n","      <td>51.3</td>\n","      <td>11.00</td>\n","      <td>47.8</td>\n","      <td>43200</td>\n","      <td>0.873</td>\n","      <td>80.5</td>\n","      <td>1.44</td>\n","      <td>46900</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Azerbaijan</td>\n","      <td>39.2</td>\n","      <td>54.3</td>\n","      <td>5.88</td>\n","      <td>20.7</td>\n","      <td>16000</td>\n","      <td>13.800</td>\n","      <td>69.1</td>\n","      <td>1.92</td>\n","      <td>5840</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa7661a2-28ea-4a97-913c-c75a8b770d60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aa7661a2-28ea-4a97-913c-c75a8b770d60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aa7661a2-28ea-4a97-913c-c75a8b770d60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["#save a kmedoid file\n","kmid_df.to_csv('kmid_result.csv',index=False)"],"metadata":{"id":"jG1_yrVW2eca","executionInfo":{"status":"ok","timestamp":1661497607338,"user_tz":-330,"elapsed":12,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}}},"execution_count":116,"outputs":[]},{"cell_type":"markdown","source":["**Visualization of clusters**"],"metadata":{"id":"eC1D1fGh9gOs"}},{"cell_type":"code","source":["#visulization of clusters child mortality vs gdpp\n","sns.scatterplot(x=kmid_df['child_mort'],y=kmid_df['gdpp'],hue='K_medoids_Clusters',data=kmid_df) \n","plt.title(\"Child Mortality vs gdpp\", fontsize=15)\n","plt.xlabel(\"Child Mortality\", fontsize=12)\n","plt.ylabel(\"gdpp\", fontsize=12)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"MptfeJjc2kw0","executionInfo":{"status":"ok","timestamp":1661497607338,"user_tz":-330,"elapsed":12,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"a889daf7-22ce-41eb-d4d1-a83dcb3abb42"},"execution_count":117,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x396 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAgUAAAFrCAYAAABBivq6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeXhURdr38W+nt6ydPUAgiSwCKhAQEQkCgkAAF0BkMZIZlUceHHScR8ZlGF9QMYOijA7KgMI4KMoyIjqIrCogKqCsgrILAgGykH3tTrrfP4DWmICBdNIBfp/r8rrSVedU36dL7btP1akyuFwuFyIiInLF8/F2ACIiIlI/KCkQERERQEmBiIiInKGkQERERAAlBSIiInKGkgIREREBlBSIeMWmTZto1aoVJ0+ePOcxiYmJvP766wC89tprdO/e/ZzH/vTTT7Rq1YpNmzZ5PNbadPZz+Omnn4CK13ypu1T7RK5sSgpEPCw9PZ2UlBT69OlDfHw8nTt3Jjk5mU8++eSC2lm5ciUPP/ywR2JavHgxrVq14pFHHjlv/VNPPVWj9zl58iSLFi266PN/fc0zZszA6XTWKCYRqT4lBSIedOTIEQYPHszx48eZMWMG27dvZ+XKlfTv35/x48czdepUr8UWEhLCl19+SVZWVqW6xYsXExERUeP3WL16NR988EGN2wHYu3cvr776qpICkTqkpEDEg5599lkiIiJ47bXXaNGiBQaDgZCQEJKSknjxxRdxOp2Ul5e7j//xxx8ZMWIE7dq145ZbbuHzzz931/Xq1YtXXnmlyvf59ttvGThwIO3bt2fw4MHs2rXrN2MLCAigffv2LFmypEL50aNH+eGHH7jxxhsrlKempvLwww9z8803Ex8fz/DhwyvcCk9OTua5555j1KhRtG/fnqlTp/K3v/2Nbdu20bZtW7777jsA/vWvf5GYmEiHDh3o0aMHr7zyCudaSPXsNa9bt4677roLgA4dOjB9+nQ6dOjAf/7znwrHL1++nLZt25KTk1OhfOHChXTo0IHi4uIK5cnJyfz5z38GYO7cuSQmJtK+fXu6dOnCX/7yFwoKCqqMy+l0MnnyZG688UY6duzIxIkTmTFjBr169XIf81t9kpyczMSJE0lJSaFz5860b9+ep556itLSUuB0YhYfH8+6detITEykbdu23HHHHezZs6fKmERqg5ICEQ/Jysriq6++4v7778fHp/J/Wv369ePxxx/HaDS6y9555x1efvllvv32W2688Ub++te//uYv48LCQh566CE6derExo0bmTZtGnPnzq1WjIMGDar0S/7DDz+kT58+WK1Wd1lZWRkPPPAAZrOZjz/+mE2bNtG5c2dGjx5Namqq+7jly5czbNgwtm7dyrhx4xg4cCAdOnRg586dtGvXjpUrV/LKK68wdepUtm3bxvTp05kzZw6LFy8+b5w9evRg0qRJAGzbto2xY8cyYMCASrF/8skn9OnTh5CQkArl/fv3p6ysjLVr17rL0tLS2Lx5M4MHD2b79u1MmTKFV155he3bt/PRRx9x6NAh3nzzzSrj+eijj5g3bx6vvvoqGzZsoEWLFsyZM8ddX90+Wbp0KVdddRXr169nwYIFrFu3jn/+85/u+pKSEj744APmzZvH119/TbNmzRgzZozulkidUVIg4iFHjx7F5XLRvHnzap+TlJREkyZNsFqt9OvXj6ysLE6dOnXec7744gsKCgp45JFH8PX1JSYmhvvuu69a75eYmMiJEyfcv+JdLhcfffQRQ4YMqXDc+vXr+emnn3j66acJDQ3F19fX/X7Lli1zH9eoUSMSExOrTIIAevfuzfr162nTpg0Abdq04eqrr2bHjh3ViveXhg8fzvbt2zlw4AAA+fn5rFu3rlLsADabjVtuuYXly5e7y5YvX05kZCRdunQhLy8PAF9fXwAaNGjA/Pnzeeyxx6p87+XLl3PzzTeTkJCAxWIhOTmZpk2buuur2yfR0dHce++9WCwWWrduzR133MGqVasqHDN69GjCw8MJCgrioYce4sSJE+zcufPCPiyRi6SkQMRDDAYDAGazudrnxMTEuP8++wV19nbyuZw4cQKbzUZwcLC77Oqrr67W+/n6+nL77be7JwNu2rQJo9FIp06dKhz3008/ERYWRnh4uLvMbDYTGxvL0aNHq4y/Kna7nddee40ePXrQtm1b2rZty65du7Db7dWK95fatWtH69at3bGvXr3a/SVflYEDB/LFF19QVFQEnP6VPnDgQHx8fLjpppvo3bs3t99+OyNGjODVV1/l4MGD53zvkydPEhsbW6Gsffv27r+r2yfNmjWr8DomJqbSEyi/TCqbNGnibl+kLigpEPGQq666Ch8fnwv6VXeuX9jnY7fb3QnIWRdye3no0KEsW7aMkpISPvzwQ+66665K7dnt9irH/X/9Pr+VAD333HOsXr2a1157je3bt7Nz507i4+OrHeuvDRs2jP/+97+UlZXxySefcNddd53zM+zevTtWq5W1a9dy5MgRdu7cyaBBgwCwWCy88sorrFy5kjvvvJMffviBO++8kwULFlTZltPprHStv/zMqtsnvy5zuVyVzvvlnJOzLubfE5GLoX/TRDzEZrPRo0cP3nzzzSp/Ca9Zs4Y77rjD/cv1YjVs2JD8/PwKk+L27dtX7fOvu+46YmJiWLFiBZ9++imDBw+udMxVV11FdnY26enp7jK73c6RI0cq/do9n23btpGYmEi7du0wGo0UFha6b/9fjDvvvJPi4mKWLl3Kpk2bqoz9LIvFQr9+/Vi1ahXLli2jXbt27l/hZWVl5OXlERMTQ1JSEm+++SajR4/mvffeq7KtyMjICndIzl7bWdXtk8OHD1d4feTIEaKjoyuUnV2z4Ww9nB6mEakLSgpEPOjpp5+mtLSUpKQkvvvuO5xOJ7m5ubz33ns89thjDBo0CH9//xq9x80334zJZGL69OmUlJRw+PDhak80POvuu+9m2rRpdOjQgYYNG1aq79GjB40aNeL5558nLy+PwsJCXn75ZZxOJwMGDDhnu35+fqSlpZGTk0NJSQmxsbH88MMPFBUVkZqaytNPP010dDQnTpw45xMIv2wL4MCBA+4v26CgIPr378+kSZO48cYbady48XnbuPPOO/nqq69YuXKl+y4BwKxZs0hKSnIPGeTk5LBv375zJjy9e/dm7dq1bN68GbvdznvvvVchSahun6SmprJgwQLsdju7d+9m6dKl9OvXr8Ixb7zxBqdOnSI/P5+ZM2cSExPjnpMhUtuUFIh4UJMmTfjwww/p0KEDjz32GO3bt6d///58/vnnvPbaa4waNarG7xEREcGMGTP48ssv6dy5M48++ij/+7//e0Ft3HnnnZw6darKSXoAVquVf/3rX5SUlJCYmEivXr04ePAg8+fPJyoq6pztDhw4ELvdTo8ePfjyyy954oknKC0tpUuXLowePZrBgwfz8MMPs3PnTh588MHzxpiQkMA111zD3XffXWGG/tChQykoKODuu+/+zevs2LEjwcHB7N+/n9tuu81dPmrUKBISErjvvvto164dt99+O4GBgUycOLHK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cqegQYMGJCYmMmzYMACefvpp2rZty5NPPsnChQuJjo5m0KBBmM1mxo0bx6hRozAYDIwdO5agoCAGDBjA119/zT333IPFYuGFF14AYPz48UyYMAGn00l8fDwJCQl1el32giKOfP5tpfLC45mUZOdjCfSv03hEREQuhNfmFIwYMYIRI0ZUKPv3v/9d6bh+/frRr1+/CmVn1yb4tRYtWjBv3jzPBnoBnGVOSnMLqqwrLymt42hEREQujFY09CCTnwVbXKMq6yy2gDqORkRE5MIoKfAgk9VCbK9OGK2WCuVNunXAN9R2jrNERETqB68NH1yuAhqEc93vbqfwZCZlxaUERkfiG2bDaDF7OzQREZHzqlZScOTIEaZMmcL27dvJzc0lODiYG264gT//+c80adKktmO85PiFB+MXHuztMERERC5ItYYPxo4dS4sWLZg1axYrVqzgzTffJDY2loceeqi24xMREZE6Uq07BSUlJfzpT39yv27cuDHXXnstn3zySa0FJiIiInWrWncKOnTowHfffVehbM+ePXTq1KlWghIREZG6V607BTk5OSQlJdGiRQuCg4PJzs7m0KFDdOjQgQceeMB93FtvvVVrgYqIiEjtqlZS0L9/f/r371/bsYiIiIgXVSspGDx4MLm5uXz33Xfk5eURHBxMfHw8QUHa5EdERORyUa2kYOHChaSkpNCsWTOCgoLIzc3lyJEjPP3009x99921HaOIiIjUgWolBdOmTeO///0vTZs2dZcdPHiQ5ORkJQVnOMvKKc7KpSA1HZfTRVCTKMwBfjjtZfhYTNoMSURE6r1qJQWRkZEVEgKA5s2bExUVVStBXYryfjrO3kWfgcvlLovrcxNpW3fjdJQR17szwVc1wmixnKcVERER76nWI4lDhgzh+eefZ8+ePZw4cYIffviBKVOmcMcdd5CWlub+50pVmlfAj8u+qpAQABz7YgtR8S2x5xWyf/HnFJ7M8lKEIiIiv61adwpSUlIAePfddyvVvfTSSwAYDAZ2797twdAuHWVFJTgKiyuVl5c6MPj8nHed+OZ7AhtH4mM01mV4IiIi1VKtpGDPnj21HcclzcdixmA04iovr1hhMGCxBWCxBWDPK6SsuARXuQuUE4iISD103qTg9ddf/80GHn74YY8Fc6myBgcSfVNbUr/aXqE8ok1zcg4eI7Ld1Tgd5fiF2zBa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nz6dadOmtTn/8+fP580330SSJK6++mouvPDC4138TiXatbj66qt54403MJlMxMTE8PTTT5OUlCSuRQf64IMPmDFjBnl5eeFlzzzzDA899NBJ95sQQYEgCIIgCIBoPhAEQRAEoZUICgRBEARBAERQIAiCIAhCKxEUCIIgCIIAiKBAEARBEIRWIigQhFOAqqq8/fbbTJ48mQkTJjB27FgeffRRHA4HADNmzODBBx+Muu21115LUVERK1euZNy4cVHXefDBB5kxY0ab5Z9++ik9e/bkm2++iVju8XgYPHgw06ZNO+TPsm7dOjZv3nzA9a655hpmzZpFTU0NkydPBsDn8/H5558f8jEF4VQhggJBOAVMnz6duXPn8uabb7JgwQJmz56N3+/nlltuOWCq1XfeeYc+ffoc9rEzMjKYM2dOxLJvvvkGq9V6WPv75JNP2LJly0Gvn5aWFj7+xo0bRVAgCPsh5j4QhE6uqamJd999l88++4y0tDQglJb44YcfZunSpeGgwOfz8ec//5mff/6Z5ORkZsyYQVpaGmPGjOG5556L2GdjYyN33303xcXFdO/eHaPRSHp6etTjDx48mJUrV+J2uzGZTADMnTuXESNGhOes8Hq9PPnkk6xcuRJZlhk5ciT33nsvGo2GMWPGcMkll/DFF19wwQUXMGvWLBYvXozNZuPaa6/liSeeYNmyZfj9foYMGcJTTz0VkbiqvLyc8ePH8/3333PbbbfhdDq56qqrSE5OZsCAAdx4440AbN26lSlTprBkyRK0WvHXKJyaRE2BIHRy69atIz09nfz8/IjlBoOBMWPGIMuhv4Hly5dz9913s3jxYhITE/n444/b3efMmTNJSEhg8eLFPPzwwyxZsqTddfV6PWeeeSZff/01EMpIuWnTpohJet555x2qq6v58ssv+eyzz1i1alVE7UJNTQ0LFizgtttuo3///tx7771cf/31fPXVV+F1582bR1FREXPnzo1ajuTkZP785z8zcOBA3n//fSZPnhxxjK+++orx48eLgEA4pYmgQBA6uaamJpKSkg643pAhQ8jKygKgV69e1NTUtLvuqlWrmDhxIgDZ2dmcdtpp+933pEmTwjfgRYsWMXr06HAwAvDtt99y+eWXh6cCvuCCC1i6dGn4/VGjRkXd74QJE/jkk0/Q6XQYDAb69esXzvt/ICNHjqS0tJSdO3eGy3X++ecf1LaC0FmJoEAQOrmEhIT93uB323tSL41GEzEd9b6am5uxWCzh1wfqHzBixAg2bNhAU1MTX375ZZubr81mIy4uLvw6Li6OhoaGiNfR2Gw2pk6dyoQJEzjvvPP4+uuvD3o6WoPBwLhx45gzZw6VlZXU1dUdMLgRhM5OBAWC0MkNHDiQhoYGioqKIpb7/X5eeukl3G73Ie/TarWGRy5A6Oa8PzqdjtGjR/P5559TUlIS0XQAoar9pqam8OumpiaSk5MPWI6XXnoJrVbLF198wfz58xk5cuQhfY5JkyYxf/58FixYwIQJEyJqLwThVCR+AYLQyVmtVm666SamTp1KSUkJAG63m4cffpiNGzeGO/8dioEDB7Jo0SIASktLWb169QG3mTRpEjNnzmTs2LFt3hs1ahQff/wxiqLQ0tLCrFmz2r3Ba7XacEDS0NBAjx490Ov1bN68mbVr19LS0tJuGbRaLU6nM1ybMHz48HBHzN3NIYJwKhM9agThFHD77bcTFxfH73//exRFQZZlzj33XB599NHD2t8tt9zCXXfdxZgxY8jPz2f8+PEH3Oa0005DkqSo7fbXXHMNZWVlTJo0CUmSOO+889q9SY8dO5bnn3+esrIybrjhBqZOncqnn37K0KFDmTp1Kg8++CD9+/ePuu2QIUOYPn06Z599Nt999x0ajSbc7DBkyJBDOwmC0AmJqZMFQTilzZw5k8bGRu67777jXRRBOO5E84EgCKcsm83Ghx9+yJVXXnm8iyIIJwQRFAiCcEr63//+x6WXXsrNN99MTk7O8S6OIJwQRPOBIAiCIAiAqCkQBEEQBKGVCAoEQRAEQQBEUCAIgiAIQisRFAiCIAiCAIigQBAEQRCEViIoEARBEAQBgP8HVobD1ygZlowAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["#visulization of clusters inflation vs gdpp\n","sns.scatterplot(x=kmid_df['inflation'],y=kmid_df['gdpp'],hue='K_medoids_Clusters',data=kmid_df) \n","plt.title(\"inflation vs gdpp\", fontsize=15)\n","plt.xlabel(\"inflation\", fontsize=12)\n","plt.ylabel(\"gdpp\", fontsize=12)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"WVcFz-P829nS","executionInfo":{"status":"ok","timestamp":1661497607338,"user_tz":-330,"elapsed":11,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"97bcfdd2-c9fa-49e5-f31d-df9a2a479094"},"execution_count":118,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x396 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#find number of developed country,developing country,under-developed country\n","under_developing=kmid_df[kmid_df['K_medoids_Clusters']==0]['country']\n","developing=kmid_df[(kmid_df['K_medoids_Clusters']==1)|(kmid_df['K_medoids_Clusters']==2)]['country']\n","developed=kmid_df[kmid_df['K_medoids_Clusters']==3]['country']\n","\n","print(\"Number of deveoped countries\",len(under_developing))\n","print(\"Number of developing countries\",len(developing))\n","print(\"Number of under-developing countries\",len(developed))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SAu-4WZB3ZXi","executionInfo":{"status":"ok","timestamp":1661497607338,"user_tz":-330,"elapsed":10,"user":{"displayName":"chetna paikra","userId":"10226385921224649164"}},"outputId":"642fad8f-f63e-48e4-80f8-47bd40e71df0"},"execution_count":119,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of deveoped countries 41\n","Number of developing countries 82\n","Number of under-developing countries 44\n"]}]},{"cell_type":"markdown","source":["**Conclusions-->**\n","\n","Country having high child-mortality, low GDP per catia and low inflation(The measurement of the annual growth rate of the Total GDP) is a under-developing country\n","\n","Country having low child-mortality, high gdpp and high infaltion is the developed country\n","\n","So here we conclude that\n","\n","*  0 = under-developing country\n","*  1 or 2 = developing country\n","*  3 = developed country"],"metadata":{"id":"LIoODzmX9ET6"}}]}